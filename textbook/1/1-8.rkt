#lang sicp
(define (abs x)
	(if (< x 0)
	    (* -1 x)
	    x))
(define (square x) (* x x))
(define (cube x) (* x x x))
(define (cube-root-iter y x)
	(if (good-enough? y x)
	    y
	    (cube-root-iter (improve y x) x)))
(define (improve y x)
	(/ (+ (/ x (square y)) (* y 2)) 3))
(define (good-enough? guess x)
	(< (abs (- (improve guess x) guess)) (* 0.25 guess))
	)
(define (cube-root x) (cube-root-iter 1 x))
(display (cube-root 8))
(newline)
(display (cube-root 27))
