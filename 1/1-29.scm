(define (simpson f a b n)
  (* (/ (/ (- b a) n) 3) (simpson-iter f a b n 0 0)))
(define (simpson-iter f a b n k val)
  (if (< k (+ n 1))
  (cond ((or (= k 0) (= k n)) (simpson-iter f a b n (+ k 1) (+ val (f (+ a (* k (/ (- b a) n)))))))
         ((= (remainder k 2) 1) (simpson-iter f a b n (+ k 1) (+ val (* 4 (f (+ a (* k (/ (- b a) n))))))))
         ((= (remainder k 2) 0) (simpson-iter f a b n (+ k 1) (+ val (* 2 (f (+ a (* k (/ (- b a) n)))))))))
  val))
(define (cube x) (* x x x))
(display (simpson cube 0 1 1000))
